@model Farma24.Produto

@{
    ViewBag.Title = "Edit";
    List<SelectListItem> categorias = new List<SelectListItem>();
    categorias.Add(new SelectListItem { Text = "Analgésico", Value = "Analgésico" });
    categorias.Add(new SelectListItem { Text = "Anti-histamínico", Value = "Anti-histamínico" });
    categorias.Add(new SelectListItem { Text = "Antibiótico", Value = "Antibiótico" });
    categorias.Add(new SelectListItem { Text = "Calmante", Value = "Calmante" });
    categorias.Add(new SelectListItem { Text = "Hormonal", Value = "Hormonal" });
    categorias.Add(new SelectListItem { Text = "Vitamínico", Value = "Vitamínico" });
    categorias.Add(new SelectListItem { Text = "Outro", Value = "Outro" });
}

<h1>
    <span style="color: #297a6d; border: solid;">
        <b>
            Editar
        </b>
    </span>
</h1>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.codBarras)

        <div class="form-group">
            @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.categoria, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.categoria, categorias, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.categoria, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.preco, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.preco, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.preco, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.descricao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.imagem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.imagem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.imagem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default back" />
            </div>
        </div>
    </div>
}

<div class="btn btn-default back">
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<style>
    .back {
        background-color: #297a6d;
        text-decoration: none;
        color: #ffffff
    }

        .back a {
            text-decoration: none;
            color: #ffffff
        }

        .back:hover {
            background-color: #39dd90;
            color: #ffffff
        }
</style>